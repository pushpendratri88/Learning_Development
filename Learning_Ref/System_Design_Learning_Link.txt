No matter the scale, these topics come into play each time. Prepare these well. 

- Checksum : https://lnkd.in/gJnJpnRF

- CAP Theorem : https://lnkd.in/gjtcJxeN

- SQL vs NoSQL : https://lnkd.in/gwCe58TU

- Circuit Breaker : https://lnkd.in/gvSrR_EA

- Load Balancing : https://lnkd.in/gefSiXEJ

- Fault Tolerance : https://lnkd.in/guiDtdXT

- API Design : https://lnkd.in/g6tHgXr7

- WebSockets : https://lnkd.in/gzdAdBNC

- API Gateway : https://lnkd.in/gWYGxs3S

- Failover : https://lnkd.in/g-eH-Pvf

- Caching : https://lnkd.in/gAp-9udf

- Scalability : https://lnkd.in/gHUfp8x9

- HeartBeat : https://lnkd.in/gzfQt74b

- Proxy Server : https://lnkd.in/gs2ZF8_d

- Bloom Filters : https://lnkd.in/gnekDkQv

- REST vs RPC : https://lnkd.in/gVGeh3VV

- Idempotency : https://lnkd.in/gqGnkZHg

- Database Index : https://lnkd.in/gE_q5m_g

- Data Replication : https://lnkd.in/gPBmH5h8

- Database Scaling: https://lnkd.in/gX7AKQHY

- Data Redundancy : https://lnkd.in/gccsuSvr

- Service Discovery : https://lnkd.in/gEjBT8ZA

- Disaster Recovery : https://lnkd.in/gEYQ_74X

- ACID Transactions : https://lnkd.in/g-sjsMwX

- Database Sharding : https://lnkd.in/gnuxe5pu

- Distributed Locking : https://lnkd.in/gJrrrqsa

- Consistent Hashing : https://lnkd.in/gmrHsEzq

- Distributed Caching : https://lnkd.in/gUH2yV-X

- Consistency Patterns : https://lnkd.in/gey7tqYh

- Latency vs Throughput : https://lnkd.in/gDAx6QQd

- Serverless Architecture : https://lnkd.in/gtS52Sza

#########################################################

1. Databases: https://lnkd.in/gtGRQpQi
2. Horizontal vs Vertical Scaling: https://lnkd.in/g7y--BPq
3. Load Balancing: https://lnkd.in/g5htBkrB
4. SQL vs NoSQL: https://lnkd.in/gjrzmbS5
5. Database Scaling: https://lnkd.in/g7yRbwsF
6. Database Sharding: https://lnkd.in/gwucPJMY
7. Message Queues: https://lnkd.in/g-nKJZwF
8. LLD (Low Level Design) : https://lnkd.in/dHauHa8i
9. Scalability: https://lnkd.in/dhNUZM2F

#########################################################

If you want to get started with system design, learn these concepts (not kidding):


1. Idempotent API:
↳ https://lnkd.in/erMkqwq4

2. Microservices Lessons From Netflix:
↳ https://lnkd.in/eZSM3CRB

3. Redis Use Cases:
↳ https://lnkd.in/ekJMjMG3

4. Actor Model:
↳ https://lnkd.in/eqcb7MpP

5. Protocol Buffers vs JSON:
↳ https://lnkd.in/egcFxe2t

6. Consistent Hashing:
↳ https://lnkd.in/eUP9DbCg

7. Monolith vs Microservices:
↳ https://lnkd.in/e3EBtg_v

8. Caching Patterns:
↳ https://lnkd.in/gJ8kWMxZ

9. Service Discovery:
↳ https://lnkd.in/eCYYwQfU

10. What Happens When You Type a URL Into Your Browser?:
↳ https://lnkd.in/eusuDn5z

11. How Databases Keep Passwords Securely:
↳ https://lnkd.in/edd8-N5k

12. Chaos Engineering:
↳ https://lnkd.in/egT6feTR

13. Saga Design Pattern:
↳ https://lnkd.in/eFXC4-aJ

14. How to Scale an App to 100 Million Users:
↳ https://lnkd.in/e4Mqty4X


#########################################################


If you want to become good at system design, learn these case studies:


1. How PayPal Was Able to Support a Billion Transactions per Day With Only 8 Virtual Machines:
 - https://lnkd.in/eqcb7MpP

2. How Stripe Prevents Double Payment Using Idempotent API:
 - https://lnkd.in/erMkqwq4

3. How Uber Computes ETA at Half a Million Requests per Second:
 - https://lnkd.in/eVKV2ePC

4. URL Shortener Architecture:
 - https://lnkd.in/evFTZVQq

5. Slack Architecture:
 - https://lnkd.in/eATMDjrK

6. How McDonald's Food Delivery Platform Handles 20,000 Orders per Second:
 - https://lnkd.in/e2JxTCDq

7. Zoom Architecture:
 - https://lnkd.in/edidhxZw

8. How Tinder Scaled to 1.6 Billion Swipes per Day: 
 - https://lnkd.in/en65fv-W

9. How You Tube Was Able to Support 2.49 Billion Users With MySQL:
 - https://lnkd.in/efmJw4Dx

10. How Amazon S3 Achieves 99.999999999% Durability:
 - https://lnkd.in/eutGiK35

11. How Cloudflare Supports 55 Million Requests per Second With 15 Postgres Clusters:
 - https://lnkd.in/eEQP6Apw

12. How Uber Finds Nearby Drivers at 1 Million Requests per Second:
 - https://lnkd.in/eeqH9Hjh

13. Gaming Leaderboard Architecture:
 - https://lnkd.in/edfTDq5R

14. How Meta Achieves 99.99999999% Cache Consistency:
 - https://lnkd.in/e88kUZAm

15. How to Scale an App to 10 Million Users on AWS: 
 - https://lnkd.in/eU736g9Q